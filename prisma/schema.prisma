// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  username     String    @unique
  firstName    String?
  lastName     String?
  bio          String?
  gender       String?
  dob          DateTime? @map("date_of_birth") @db.Date
  password     String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  role         Role      @default(USER)
  profileViews Int       @default(0)

  posts       Post[]
  departments Department[]
  groups      Group[]
  // participants Participant[]

  @@map("users")
}

model Post {
  id        Int        @id @default(autoincrement())
  title     String
  content   String
  summary   String
  published PostStatus @default(DRAFT)
  comments  Json?
  views     Int?       @default(0)
  likes     Int?       @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  author    User       @relation(fields: [authorId], references: [id])
  authorId  Int

  tags Tags[]

  @@map("posts")
}

model Tags {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
  postIds   Int[]    @map("post_ids")

  @@map("tags")
}

model Department {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  members User[]

  @@map("departments")
}

model Group {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  members User[]

  // participants Participant[]

  @@map("groups")
}

enum Role {
  ADMIN
  USER
  GUEST
  AUTHOR
  EDITOR
}

enum Status {
  ACTIVE // active participants
  INACTIVE // inactive participants
  SUSPENDED // suspended participants 
  DELETED // deleted participants
}

// model Participant {
//   id        Int      @id @default(autoincrement())
//   status    Status   @default(ACTIVE)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   user   User @relation(fields: [userId], references: [id])
//   userId Int

//   // group   Group @relation(fields: [groupId], references: [id])
//   groupId Int

//   @@map("participants")
// }

model Service {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("services")
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}
